@import "tailwindcss";
@import "tw-animate-css";

@font-face {
  font-family: "druk";
  src: url("/fonts/DrukTextWideBoldTrial.woff2") format("woff2");
  font-display: auto;
  font-style: bold;
  font-weight: 800;
  font-stretch: normal;
}

@theme inline {
  --color-accent-orange: var(--accent-orange);
  --color-accent-pink: var(--accent-pink);
  --color-blue-foreground: var(--blue-foreground);
  --color-blue-background: var(--blue-background);
  --color-yellow-background: var(--yellow-background);
  --color-yellow-foreground: var(--yellow-foreground);
  --color-green-foreground: var(--green-foreground);
  --font-onest: var(--font-onest);

  --text-lg: 16px;
  --text-base: 14px;
  --text-base--line-height: 150%;

  --font-druk: "druk", sans-serif;
  --font-bowlby-one: "bowlby-one", sans-serif;
}

:root {
  --accent-orange: rgba(240, 119, 6, 1);
  --accent-pink: rgba(255, 24, 175, 1);
  --blue-foreground: rgba(64, 81, 159, 1);
  --blue-background: rgba(188, 217, 247, 1);
  --yellow-background: rgba(255, 192, 1, 1);
  --yellow-foreground: rgba(145, 82, 0, 1);
  --green-foreground: rgba(103, 112, 67, 1);

  /* example */
  --sidebar-ring: oklch(0.708 0 0);
}

@layer base {
  * {
    @apply outline-accent-orange/50;
  }
  body {
    @apply bg-blue-background/70 font-onest text-base;
  }

  h1,
  h2,
  h3,
  h4 {
    padding: 0;
    margin: 0;
  }
  html {
    scroll-behavior: smooth;
  }
}

.gradient-orange {
  background: linear-gradient(300.1deg, #ffc001 0.8%, #f07706 68.35%);
}

.gradient-pink {
  background: linear-gradient(300.1deg, #ff0199 0.8%, #ff59ec 68.35%);
}

.gradient-green {
  background: linear-gradient(300.1deg, #f6d72f 0.8%, #c3c874 68.35%);
}

@keyframes rotate-on-scroll {
  from {
    transform: rotate(0deg);
  }
  to {
    /* Use the CSS variable set by the component, with a fallback */
    transform: rotate(360deg);
  }
}

.animate-scroll-rotate {
  animation-name: rotate-on-scroll;
  animation-duration: auto;
  animation-timeline: scroll(root block);
  animation-timing-function: cubic-bezier(0.2, 0.8, 0.4, 1);
  animation-range: 0 100%;
}

.marqueeContainer {
  /* Ensure :hover works correctly if pauseOnHover is enabled */
  display: block; /* Or inline-block, flex etc. depending on context */
}

/* Content wrapper */
.marqueeContent {
  display: inline-block; /* Crucial for horizontal movement */
  white-space: nowrap; /* Prevent content wrapping */
  will-change: transform; /* Performance hint */
  /* animation-play-state is controlled via inline style for precision */
}

/* Class to activate the animation */
.animate {
  animation-name: scroll;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  /* Duration comes from CSS variable set inline */
  animation-duration: var(--marquee-duration);
}

/* The keyframes for scrolling */
@keyframes scroll {
  0% {
    transform: translateX(0%);
  }
  100% {
    /* Move left by exactly the width of ONE text copy + its gap */
    /* This assumes the content div contains two identical copies */
    transform: translateX(-50%);
  }
}

/* Pause on hover functionality */
/* Apply this rule only when the container has the specific class */
.pauseOnHover:hover .animate {
  animation-play-state: paused !important; /* Use !important to override inline style if necessary */
}

/* Styling for the text spans - primarily for the gap */
/* We still use the Tailwind 'gap' prop for flexibility */
.textSpan {
  display: inline-block; /* Ensure spans behave as blocks */
}
